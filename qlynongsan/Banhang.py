# Form implementation generated from reading ui file 'Banhang.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import Dataconnection
from mysql.connector import Error
from PyQt6.QtWidgets import  QApplication, QMessageBox, QMainWindow,QPushButton,QWidget
from PyQt6.QtCore import QDate
from PyQt6.QtGui import QAction,QStandardItemModel, QStandardItem
from PyQt6 import QtCore, QtGui, QtWidgets
# chuyển hướng
from ChiTietHoaDon import Ui_ChiTietHoaDon
from InHoaDon import Ui_InHoaDon
from Danhsachsanpham import Ui_DanhSachSanPham
from Danhsachnhanvienn import Ui_NhanVien
from Nhacungcap import Ui_NhaCungCap
from Thongke import Ui_ThongKe


class Ui_BanHang(object):
    mahoadon=0
    def setupUi(self, MainWindow):
        self.MainWindow = MainWindow  # Save reference to the Dialog
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1516, 839)
        MainWindow.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(20, 20, 711, 261))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.frame.setFont(font)
        self.frame.setMouseTracking(False)
        self.frame.setTabletTracking(False)
        self.frame.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.frame.setAutoFillBackground(False)
        self.frame.setStyleSheet("\n"
"background-color: rgb(246, 253, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.frame.setObjectName("frame")
        self.label_2 = QtWidgets.QLabel(parent=self.frame)
        self.label_2.setGeometry(QtCore.QRect(20, 40,47, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        # self.label = QtWidgets.QLabel(parent=self.frame)
        # self.label.setGeometry(QtCore.QRect(20, 90, 47, 13))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        # self.label.setFont(font)
        # self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(parent=self.frame)
        self.label_3.setGeometry(QtCore.QRect(20, 90, 47, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.frame)
        self.label_4.setGeometry(QtCore.QRect(20, 130, 111, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_9 = QtWidgets.QLabel(parent=self.frame)
        self.label_9.setGeometry(QtCore.QRect(20, 170, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.txtMaHoaDon = QtWidgets.QTextEdit(parent=self.frame)
        self.txtMaHoaDon.setGeometry(QtCore.QRect(140, 40, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtMaHoaDon.setFont(font)
        self.txtMaHoaDon.setObjectName("txtMaHoaDon")
        self.txtDonGia = QtWidgets.QTextEdit(parent=self.frame)
        self.txtDonGia.setGeometry(QtCore.QRect(140, 170, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtDonGia.setFont(font)
        self.txtDonGia.setObjectName("txtDonGia")
        self.txtSoLuong = QtWidgets.QTextEdit(parent=self.frame)
        self.txtSoLuong.setGeometry(QtCore.QRect(140, 130, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtSoLuong.setFont(font)
        self.txtSoLuong.setObjectName("txtSoLuong")
        self.txtTenSanPham = QtWidgets.QTextEdit(parent=self.frame)
        self.txtTenSanPham.setGeometry(QtCore.QRect(140, 90, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.txtTenSanPham.setFont(font)
        self.txtTenSanPham.setObjectName("txtTenSanPham")
        # self.txtSTT = QtWidgets.QTextEdit(parent=self.frame)
        # self.txtSTT.setGeometry(QtCore.QRect(140, 90, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        # self.txtSTT.setFont(font)
        # self.txtSTT.setObjectName("txtSTT")
        self.btnThem = QtWidgets.QPushButton(parent=self.frame)
        self.btnThem.setGeometry(QtCore.QRect(490, 40, 181, 41))   
        self.btnThem.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.btnThem.setFont(font)
        self.btnThem.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnThem.setObjectName("btnThem")
        self.btnRefesh = QtWidgets.QPushButton(parent=self.frame)
        self.btnRefesh.setGeometry(QtCore.QRect(490, 180, 181, 41))
        self.btnRefesh.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btnRefesh.setFont(font)
        self.btnRefesh.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnRefesh.setObjectName("btnRefesh")
        self.btnXemChiTietHoaDon = QtWidgets.QPushButton(parent=self.frame)
        self.btnXemChiTietHoaDon.setGeometry(QtCore.QRect(490, 110, 181, 41))
        self.btnXemChiTietHoaDon.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnXemChiTietHoaDon.setFont(font)
        self.btnXemChiTietHoaDon.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnXemChiTietHoaDon.setObjectName("btnXemChiTietHoaDon")
        self.btnInHoaDon_2 = QtWidgets.QPushButton(parent=self.frame)
        self.btnInHoaDon_2.setGeometry(QtCore.QRect(350, 740, 191, 41))
        self.btnInHoaDon_2.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btnInHoaDon_2.setFont(font)
        self.btnInHoaDon_2.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnInHoaDon_2.setObjectName("btnInHoaDon_2")
        self.btnTimKiem_2 = QtWidgets.QPushButton(parent=self.frame)
        self.btnTimKiem_2.setGeometry(QtCore.QRect(1250, 110, 75, 23))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btnTimKiem_2.setFont(font)
        self.btnTimKiem_2.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnTimKiem_2.setObjectName("btnTimKiem_2")
        self.btnThanhToan_2 = QtWidgets.QPushButton(parent=self.frame)
        self.btnThanhToan_2.setGeometry(QtCore.QRect(350, 690, 191, 41))
        self.btnThanhToan_2.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btnThanhToan_2.setFont(font)
        self.btnThanhToan_2.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnThanhToan_2.setObjectName("btnThanhToan_2")
        self.btnTinhTienHoaDon_2 = QtWidgets.QPushButton(parent=self.frame)
        self.btnTinhTienHoaDon_2.setGeometry(QtCore.QRect(350, 630, 191, 41))
        self.btnTinhTienHoaDon_2.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btnTinhTienHoaDon_2.setFont(font)
        self.btnTinhTienHoaDon_2.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnTinhTienHoaDon_2.setObjectName("btnTinhTienHoaDon_2")
        self.btnTaoHoaDon = QtWidgets.QPushButton(parent=self.frame)
        self.btnTaoHoaDon.setGeometry(QtCore.QRect(360, 40, 111, 31))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnTaoHoaDon.setFont(font)
        self.btnTaoHoaDon.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnTaoHoaDon.setObjectName("btnTaoHoaDon")
        self.tableViewHoaDon = QtWidgets.QTableView(parent=self.centralwidget)
        self.tableViewHoaDon.setGeometry(QtCore.QRect(20, 350, 711, 161))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tableViewHoaDon.setFont(font)
        self.tableViewHoaDon.setObjectName("tableViewHoaDon")
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(740, 20, 751, 771))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.frame_2.setFont(font)
        self.frame_2.setStyleSheet("background-color: rgb(246, 253, 255);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.tableViewSanPham = QtWidgets.QTableView(parent=self.frame_2)
        self.tableViewSanPham.setGeometry(QtCore.QRect(30, 90, 681, 621))
        self.tableViewSanPham.setStyleSheet("\n"
"background-color: rgb(255, 255, 255);")
        self.tableViewSanPham.setObjectName("tableViewSanPham")
        self.label_13 = QtWidgets.QLabel(parent=self.frame_2)
        self.label_13.setGeometry(QtCore.QRect(40, 40, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.txtTimKiem = QtWidgets.QTextEdit(parent=self.frame_2)
        self.txtTimKiem.setGeometry(QtCore.QRect(230, 50, 161, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txtTimKiem.setFont(font)
        self.txtTimKiem.setObjectName("txtTimKiem")
        self.btnTimKiem = QtWidgets.QPushButton(parent=self.frame_2)
        self.btnTimKiem.setGeometry(QtCore.QRect(400, 50, 75, 23))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnTimKiem.setFont(font)
        self.btnTimKiem.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnTimKiem.setObjectName("btnTimKiem")
        self.label_14 = QtWidgets.QLabel(parent=self.frame_2)
        self.label_14.setGeometry(QtCore.QRect(280, 10, 361, 31))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(14)
        font.setItalic(False)
        self.label_14.setFont(font)
        self.label_14.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.label_14.setObjectName("label_14")
        self.frame_3 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(20, 550, 711, 241))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.frame_3.setFont(font)
        self.frame_3.setStyleSheet("background-color: rgb(246, 253, 255);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.frame_3.setObjectName("frame_3")
        self.label_12 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_12.setGeometry(QtCore.QRect(340, 30, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_16 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_16.setGeometry(QtCore.QRect(590, 30, 47, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.btnTinhTienHoaDon = QtWidgets.QPushButton(parent=self.frame_3)
        self.btnTinhTienHoaDon.setGeometry(QtCore.QRect(400, 60, 191, 41))
        self.btnTinhTienHoaDon.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnTinhTienHoaDon.setFont(font)
        self.btnTinhTienHoaDon.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnTinhTienHoaDon.setObjectName("btnTinhTienHoaDon")
        self.btnThanhToan = QtWidgets.QPushButton(parent=self.frame_3)
        self.btnThanhToan.setGeometry(QtCore.QRect(400, 110, 191, 41))
        self.btnThanhToan.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnThanhToan.setFont(font)
        self.btnThanhToan.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnThanhToan.setObjectName("btnThanhToan")
        self.btnInHoaDon = QtWidgets.QPushButton(parent=self.frame_3)
        self.btnInHoaDon.setGeometry(QtCore.QRect(400, 160, 191, 41))
        self.btnInHoaDon.setMinimumSize(QtCore.QSize(111, 0))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.btnInHoaDon.setFont(font)
        self.btnInHoaDon.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnInHoaDon.setObjectName("btnInHoaDon")
        self.txtTongTien = QtWidgets.QLineEdit(parent=self.frame_3)
        self.txtTongTien.setGeometry(QtCore.QRect(400, 30, 141, 20))
        self.txtTongTien.setObjectName("txtTongTien")
        self.label_11 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_11.setGeometry(QtCore.QRect(20, 90, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        
        self.txtNgayThanhToan = QtWidgets.QDateEdit(parent=self.frame_3)
        self.txtNgayThanhToan.setGeometry(QtCore.QRect(160, 100, 151, 21))
        self.txtNgayThanhToan.setObjectName("txtNgayThanhToan")
        self.label_10 = QtWidgets.QLabel(parent=self.frame_3)
        self.label_10.setGeometry(QtCore.QRect(20, 30, 71, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.ComboboxNhanVien = QtWidgets.QComboBox(parent=self.frame_3)
        self.ComboboxNhanVien.setGeometry(QtCore.QRect(160, 30, 141, 22))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.ComboboxNhanVien.setFont(font)
        self.ComboboxNhanVien.setObjectName("ComboboxNhanVien")
        self.label_15 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(50, 305, 271, 31))
        font = QtGui.QFont()
        font.setFamily("Lucida Fax")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.btnCleanAll = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCleanAll.setGeometry(QtCore.QRect(330, 310, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Tw Cen MT Condensed Extra Bold")
        font.setPointSize(12)
        self.btnCleanAll.setFont(font)
        self.btnCleanAll.setStyleSheet("background-color: rgb(85, 85, 127);\n"
"color: rgb(255, 255, 255);")
        self.btnCleanAll.setObjectName("btnCleanAll")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1135, 18))
        self.menubar.setObjectName("menubar")
        self.menumanager = QtWidgets.QMenu(parent=self.menubar)
        self.menumanager.setObjectName("menumanager")
        self.menusetting = QtWidgets.QMenu(parent=self.menubar)
        self.menusetting.setObjectName("menusetting")
        MainWindow.setMenuBar(self.menubar)
        self.actionlogout = QtGui.QAction(parent=MainWindow)
        self.actionlogout.setObjectName("actionlogout")
        self.actionexit = QtGui.QAction(parent=MainWindow)
        self.actionexit.setObjectName("actionexit")
        self.actionHome = QtGui.QAction(parent=MainWindow)
        self.actionHome.setEnabled(True)
        self.actionHome.setObjectName("actionHome")
        self.actionBanHang = QtGui.QAction(parent=MainWindow)
        self.actionBanHang.setObjectName("actionBanHang")
        self.actionNhanVien = QtGui.QAction(parent=MainWindow)
        self.actionNhanVien.setObjectName("actionNhanVien")
        self.actionNhaCC = QtGui.QAction(parent=MainWindow)
        self.actionNhaCC.setObjectName("actionNhaCC")
        self.actionSanPham = QtGui.QAction(parent=MainWindow)
        self.actionSanPham.setObjectName("actionSanPham")
        self.actionThongKe = QtGui.QAction(parent=MainWindow)
        self.actionThongKe.setObjectName("actionThongKe")
        self.actionH_Tr = QtGui.QAction(parent=MainWindow)
        self.actionH_Tr.setObjectName("actionH_Tr")
        self.menumanager.addAction(self.actionSanPham)
        self.menumanager.addAction(self.actionNhanVien)
        self.menumanager.addAction(self.actionNhaCC)
        self.menumanager.addAction(self.actionThongKe)
        self.menusetting.addSeparator()
        self.menusetting.addAction(self.actionlogout)
        self.menusetting.addAction(self.actionH_Tr)
        self.menubar.addAction(self.menumanager.menuAction())
        self.menubar.addAction(self.menusetting.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # ##########   sự kiện các nút
        self.btnRefesh.clicked.connect(self.refresh_data)
        self.btnTimKiem.clicked.connect(self.search_product)
        self.tableViewSanPham.clicked.connect(self.table_clicked)
        self.btnTaoHoaDon.clicked.connect(self.TaoMaHoaDon)
        self.btnThem.clicked.connect(self.Them_HoaDon_table)
        self.btnCleanAll.clicked.connect(self.cleansp)
        self.btnTinhTienHoaDon.clicked.connect(self.TongTien)
        self.btnThanhToan.clicked.connect(self.ThanhToan)
        self.btnInHoaDon.clicked.connect(self.InHoaDon)
        
        # sự kiện chuyển hướng trang
        self.btnXemChiTietHoaDon.clicked.connect(self.XemChiTietHoaDon)
        self.actionSanPham.triggered.connect(
            lambda: self.openWindow(Ui_DanhSachSanPham) 
        )
        self.actionNhanVien.triggered.connect(
            lambda: self.openWindow(Ui_NhanVien)
        )
        self.actionNhaCC.triggered.connect(
            lambda:self.openWindow(Ui_NhaCungCap)
        )
        self.actionThongKe.triggered.connect(
            lambda:self.openWindow(Ui_ThongKe)
        )
        self.actionlogout.triggered.connect(self.Logout)
        # 
        self.initialize_table()
        self.HoaDon_table()
        self.layMaNhanVien()
        self.lamMoiNgay()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Quản Lý Bán Hàng"))
        self.label_2.setText(_translate("MainWindow", "Mã Hóa Đơn"))
        # self.label.setText(_translate("MainWindow", "STT"))
        self.label_3.setText(_translate("MainWindow", "Tên SP"))
        self.label_4.setText(_translate("MainWindow", "Số Lượng"))
        self.label_9.setText(_translate("MainWindow", "Đơn Giá"))
        self.btnThem.setText(_translate("MainWindow", "THÊM VÀO HD"))
        self.btnRefesh.setText(_translate("MainWindow", "Refresh"))
        self.btnXemChiTietHoaDon.setText(_translate("MainWindow", "XEM CHI TIẾT HD"))
        self.btnInHoaDon_2.setText(_translate("MainWindow", "In Hóa Đơn"))
        self.btnTimKiem_2.setText(_translate("MainWindow", "Tìm Kiếm"))
        self.btnThanhToan_2.setText(_translate("MainWindow", "Thanh Toán"))
        self.btnTinhTienHoaDon_2.setText(_translate("MainWindow", "Tính Tiền Hóa Đơn"))
        self.btnTaoHoaDon.setText(_translate("MainWindow", "Tạo Hóa Đơn"))
        self.label_13.setText(_translate("MainWindow", "Nhập tên nông sản cần tìm"))
        self.btnTimKiem.setText(_translate("MainWindow", "Tìm Kiếm"))
        self.label_14.setText(_translate("MainWindow", "DANH SÁCH NÔNG SẢN "))
        self.label_12.setText(_translate("MainWindow", "Tổng Tiền "))
        self.label_16.setText(_translate("MainWindow", "$"))
        self.btnTinhTienHoaDon.setText(_translate("MainWindow", "Tính Tiền Hóa Đơn"))
        self.btnThanhToan.setText(_translate("MainWindow", "Thanh Toán"))
        self.btnInHoaDon.setText(_translate("MainWindow", "In Hóa Đơn"))
        self.label_11.setText(_translate("MainWindow", "Ngày Thanh Toán"))
        # self.txtNgayThanhToan.setText(_translate("MainWindow",))
        self.label_10.setText(_translate("MainWindow", "Nhân Viên"))
        self.label_15.setText(_translate("MainWindow", "Nông sản được thêm vào hóa đơn"))
        self.btnCleanAll.setText(_translate("MainWindow", "xóa cart"))
        self.menumanager.setTitle(_translate("MainWindow", "Manager"))
        self.menusetting.setTitle(_translate("MainWindow", "Setting"))
        self.actionlogout.setText(_translate("MainWindow", "Đăng Xuất"))
        self.actionexit.setText(_translate("MainWindow", "EXIT"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionBanHang.setText(_translate("MainWindow", "BanHang"))
        self.actionNhanVien.setText(_translate("MainWindow", "NhanVien"))
        self.actionNhaCC.setText(_translate("MainWindow", "NhaCC"))
        self.actionSanPham.setText(_translate("MainWindow", "SanPham"))
        self.actionThongKe.setText(_translate("MainWindow", "ThongKe"))
        self.actionH_Tr.setText(_translate("MainWindow", "Hỗ Trợ"))
  # ###################################
    def initialize_table(self):
        self.model = QtGui.QStandardItemModel()
        self.model.setHorizontalHeaderLabels(["Mã SP", "Tên SP", "Mô tả", "Giá", "Số lượng", "Mã NCC"])
        self.tableViewSanPham.setModel(self.model)
        self.tableViewSanPham.setColumnHidden(0, True)  # Hide the "Mã SP" column
        
         # Làm cho các cột chiếm toàn bộ chiều rộng của bảng
        header = self.tableViewSanPham.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)
        # Set a larger row height
        self.tableViewSanPham.verticalHeader().setDefaultSectionSize(40)
        self.refresh_data()
# tiêu đề
    
    def HoaDon_table(self):
        self.modelHoaDon = QtGui.QStandardItemModel()
        self.modelHoaDon.setHorizontalHeaderLabels(['Mã SP', 'Tên SP', 'Số lượng', 'Đơn giá'])
        self.tableViewHoaDon.setModel(self.modelHoaDon)
        header = self.tableViewHoaDon.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)

#   
    def refresh_data(self):
        connection = Dataconnection.connectdatabase()
        if connection:
            cursor = connection.cursor()
            cursor.execute("SELECT * FROM SanPham")
            records = cursor.fetchall()
            self.model.removeRows(0, self.model.rowCount())
            for row in records:
                items = [QtGui.QStandardItem(str(field)) for field in row]
                self.model.appendRow(items)
            cursor.close()
            Dataconnection.close_connection(connection)
    

      
        self.txtTenSanPham.clear()
        self.txtSoLuong.clear()
        self.txtTongTien.clear()
        self.layMaNhanVien()

    def lamMoiNgay(self):
        # Implement clearing input fields
        self.txtNgayThanhToan.setDate(QtCore.QDate.currentDate())
    def search_product(self):
        search_term = self.txtTimKiem.toPlainText()
        query = f"SELECT * FROM SanPham WHERE TenSP LIKE '%{search_term}%' OR MoTa LIKE '%{search_term}%'"
        
        connection = Dataconnection.connectdatabase()
        if connection:
            cursor = connection.cursor()
            cursor.execute(query)
            records = cursor.fetchall()
            self.model.removeRows(0, self.model.rowCount())
            for row in records:
                items = [QtGui.QStandardItem(str(field)) for field in row]
                self.model.appendRow(items)
            cursor.close()
            Dataconnection.close_connection(connection)

    def table_clicked(self, index):
        row = index.row()
        self.txtTenSanPham.setText(self.model.item(row, 1).text())
        self.txtDonGia.setText(self.model.item(row, 3).text())

# Tạo mã Hóa Đơn
    def TaoMaHoaDon(self):
       connection = Dataconnection.connectdatabase()
       if connection:
        cursor = connection.cursor()
        try:
            while True:
                self.mahoadon += 1
                new_mahoadon = f"{self.mahoadon:00d}"
                cursor.execute("SELECT COUNT(*) FROM HoaDon WHERE MaHD = %s", (new_mahoadon,))
                result = cursor.fetchone()
                if result[0] == 0:
                    self.txtMaHoaDon.setText(new_mahoadon)
                    break
        except Error as e:
            QtWidgets.QMessageBox.critical(self, 'Lỗi', f'Lỗi khi tạo mã hóa đơn: {e}')
        finally:
            cursor.close()
            Dataconnection.close_connection(connection)
          
    

# Thêm hóa đơn vào bảng
    # def Them_HoaDon_table(self):
    #     row = self.tableViewSanPham.currentIndex().row() # Lấy chỉ số hàng hiện tại trong tableViewSanPham
 
    #     mahoadon = self.txtMaHoaDon.toPlainText()
    #     tensanpham = self.txtTenSanPham.toPlainText()
    #     soluong = self.txtSoLuong.toPlainText()
    #     dongia = self.txtDonGia.toPlainText()
        
        
    #     # 
        
    #     # Check 
    #     if  not mahoadon or not tensanpham or not soluong or not dongia:
    #         QtWidgets.QMessageBox.warning(None, "Lỗi", "Vui lòng điền đầy đủ thông tin.")
    #         return False
    #     # Kiểm tra nếu số lượng là số nguyên dương
    #     if not soluong.isdigit() or int(soluong) <= 0:
    #         QtWidgets.QMessageBox.warning(None, "Lỗi", "Số lượng phải là số nguyên dương hợp lệ.")
    #         return False
    # # Kiểm tra số lượng sản phẩm trong kho
         
    #     masanpham =  self.model.item(row, 0).text() #mã sp hiện thị theo tên sp đã chọn


    #     items = [
    #         # QtGui.QStandardItem(mahoadon),
    #         QtGui.QStandardItem(masanpham),
    #         QtGui.QStandardItem(tensanpham),
    #         QtGui.QStandardItem(soluong),
    #         QtGui.QStandardItem(dongia),
    #     ]

    #     # Append the items to the model
    #     self.modelHoaDon.appendRow(items)

    #     connection = Dataconnection.connectdatabase()
        
    #     if connection:
    #         cursor = connection.cursor()
    #         cursor.execute("INSERT INTO ChiTietHoaDon ( MaHD, MaSP, TenSP, SoLuong, GiaBan) VALUES (%s, %s, %s, %s, %s)",
    #                        (mahoadon, masanpham,tensanpham,soluong, dongia))
    #         connection.commit()
    #         cursor.close()
    #         Dataconnection.close_connection(connection)
            
    def Them_HoaDon_table(self):
        row = self.tableViewSanPham.currentIndex().row()  # Lấy chỉ số hàng hiện tại trong tableViewSanPham

        mahoadon = self.txtMaHoaDon.toPlainText()
        tensanpham = self.txtTenSanPham.toPlainText()
        soluong = self.txtSoLuong.toPlainText()
        dongia = self.txtDonGia.toPlainText()

        # Check 
        if not mahoadon or not tensanpham or not soluong or not dongia:
            QtWidgets.QMessageBox.warning(None, "Lỗi", "Vui lòng điền đầy đủ thông tin.")
            return False

        # Kiểm tra nếu số lượng là số nguyên dương
        if not soluong.isdigit() or int(soluong) <= 0:
            QtWidgets.QMessageBox.warning(None, "Lỗi", "Số lượng phải là số nguyên dương hợp lệ.")
            return False

        masanpham = self.model.item(row, 0).text()  # mã sp hiện thị theo tên sp đã chọn

        connection = Dataconnection.connectdatabase()
        if connection:
            cursor = connection.cursor()

            # Truy vấn số lượng hiện có của sản phẩm từ bảng SanPham
            cursor.execute("SELECT SoLuong FROM SanPham WHERE MaSP = %s", (masanpham,))
            ket_qua = cursor.fetchone()

            if ket_qua is not None:
                soluong_hienco = ket_qua[0]

                # Kiểm tra số lượng yêu cầu với số lượng hiện có
                if int(soluong) > soluong_hienco:
                    QtWidgets.QMessageBox.warning(None, "Lỗi", "Số lượng yêu cầu vượt quá số lượng hiện có trong kho.")
                    cursor.close()
                    Dataconnection.close_connection(connection)
                    return False

                # Nếu số lượng hợp lệ, thêm vào bảng ChiTietHoaDon
                items = [
                    QtGui.QStandardItem(masanpham),
                    QtGui.QStandardItem(tensanpham),
                    QtGui.QStandardItem(soluong),
                    QtGui.QStandardItem(dongia),
                ]

                # Append the items to the model
                self.modelHoaDon.appendRow(items)
                

                cursor.execute("INSERT INTO ChiTietHoaDon (MaHD, MaSP, TenSP, SoLuong, GiaBan) VALUES (%s, %s, %s, %s, %s)",
                            (mahoadon, masanpham, tensanpham, soluong, dongia))
                connection.commit()
                self.search_product()
            else:
                QtWidgets.QMessageBox.warning(None, "Lỗi", "Không tìm thấy sản phẩm trong kho.")

            cursor.close()
            Dataconnection.close_connection(connection)

       

# Tính tien hoa don
    def TongTien(self):
        # Method to calculate the total amount and display it
        tinhtien = 0
        for row in range(self.modelHoaDon.rowCount()):
            soluong = float(self.modelHoaDon.item(row, 2).text())
            gia = float(self.modelHoaDon.item(row, 3).text())
            tinhtien += soluong * gia

        self.txtTongTien.setText(str(tinhtien))


    def ThanhToan(self):
        MaHD = self.txtMaHoaDon.toPlainText()
        MaNV = int(self.ComboboxNhanVien.currentText())
        NgayLap = self.txtNgayThanhToan.date().toString(QtCore.Qt.DateFormat.ISODate)
        TongTien = self.txtTongTien.text()

        # Kiểm tra xem các trường không được rỗng
        if not MaHD or not MaNV or not TongTien:
            msg = QMessageBox()
            msg.setWindowTitle("Thông báo")
            msg.setText("Vui lòng nhập đầy đủ thông tin (Mã hóa đơn, Nhân viên).")
            msg.setIcon(QMessageBox.Icon.Warning)
            x = msg.exec()
            return
        if  not TongTien:
            msg = QMessageBox()
            msg.setWindowTitle("Thông báo")
            msg.setText("Vui lòng thao tác tính tổng tiền trước khi thao tác thanh toán ! ).")
            msg.setIcon(QMessageBox.Icon.Warning)
            x = msg.exec()
            return
        if float(TongTien) == 0:
            msg = QMessageBox()
            msg.setWindowTitle("Thông báo")
            msg.setText("Chưa có gì trong giỏ hàng. Vui lòng thêm sản phẩm vào giỏ hàng trước khi thanh toán.")
            msg.setIcon(QMessageBox.Icon.Warning)
            x = msg.exec()
            return
        # Kiểm tra định dạng ngày tháng (bạn có thể thêm kiểm tra ngày tháng nếu cần)
        try:
            TongTien = float(TongTien)  # Chuyển đổi tổng tiền thành số thực
        except ValueError:
            msg = QMessageBox()
            msg.setWindowTitle("Thông báo")
            msg.setText("Tổng tiền phải là số.")
            msg.setIcon(QMessageBox.Icon.Warning)
            x = msg.exec()
            return

        # Lưu dữ liệu vào cơ sở dữ liệu
        connection = Dataconnection.connectdatabase()
        if connection:
            try:
                
                cursor = connection.cursor()
                cursor.execute("INSERT INTO HoaDon (MaHD, MaNV, NgayLap, TongTien) VALUES (%s, %s, %s, %s)", (MaHD, MaNV, NgayLap, TongTien))
                connection.commit()

                # Hiển thị thông báo thành công
                msg = QMessageBox()
                msg.setWindowTitle("Thông báo")
                msg.setText("Đã lưu hóa đơn thành công!")
                
                msg.setIcon(QMessageBox.Icon.Information)
                x = msg.exec()
                self.modelHoaDon.removeRows(0, self.modelHoaDon.rowCount())

            except Exception as e:
                # Hiển thị thông báo lỗi nếu có lỗi trong quá trình thực thi SQL
                msg = QMessageBox()
                msg.setWindowTitle("Thông báo")
                msg.setText(f"Lỗi: {e}")
                msg.setIcon(QMessageBox.Icon.Critical)
                x = msg.exec()

            finally:
                cursor.close()
                Dataconnection.close_connection(connection)



    
    def cleansp(self):
    # Lấy hàng đang chọn trong bảng hóa đơn
        selected_row = self.tableViewHoaDon.currentIndex().row()
        
        if selected_row < 0:
            QtWidgets.QMessageBox.warning(None, "Lỗi", "Vui lòng chọn sản phẩm để xóa.")
            return

        # Lấy tên sản phẩm từ hàng được chọn
        masanpham = self.modelHoaDon.item(selected_row, 0).text()  # Giả định mã sản phẩm ở cột thứ nhất
        tensanpham = self.modelHoaDon.item(selected_row, 1).text()  # Giả định tên sản phẩm ở cột thứ hai
        MaHD = self.txtMaHoaDon.toPlainText()
        # Xóa sản phẩm khỏi mô hình hiển thị
        self.modelHoaDon.removeRow(selected_row)

        connection = Dataconnection.connectdatabase()
        try:
            cursor = connection.cursor()
            cursor.execute("DELETE FROM ChiTietHoaDon WHERE MaHD=%s AND MaSP=%s AND TenSP=%s", (MaHD,masanpham, tensanpham))
            connection.commit()
            cursor.close()
            Dataconnection.close_connection(connection)
            QtWidgets.QMessageBox.information(None, "Thông báo", "Xóa sản phẩm ra khỏi hóa đơn thành công!")
            self.search_product()
        except Exception as e:
            QtWidgets.QMessageBox.warning(None, "Lỗi", f"Lỗi: {e}")

            
           
    def xoaSanPham(self):
    # Xóa sản phẩm khỏi cơ sở dữ liệu
        maSP = int(self.txtMaSanPham.text())
        conn = Dataconnection.connectdatabase()
        try:
                cursor = conn.cursor()
                cursor.execute("DELETE FROM SanPham WHERE MaSP=%s", (maSP,))
                conn.commit()
                conn.close()
                QMessageBox.information(None, "Thông báo", "Xóa sản phẩm thành công!")
        except Exception as e:
                QMessageBox.warning(None, "Lỗi", f"Lỗi: {e}")

    def layMaNhanVien(self):
        try:
            conn = Dataconnection.connectdatabase()
            cursor = conn.cursor()
            cursor.execute("SELECT MaNV FROM NhanVien")
            maNV_list = cursor.fetchall()
            conn.close()

            # Xóa các lựa chọn cũ trong ComboBox
            self.ComboboxNhanVien.clear()

            # Thêm danh sách mã nhân viên vào ComboBox
            for maNV in maNV_list:
                self.ComboboxNhanVien.addItem(str(maNV[0]))

        except Exception as e:
            QMessageBox.warning(None, "Lỗi", f"Lỗi khi lấy danh sách mã nhân viên: {e}")
      
    # sự kiện btn Xem Chi tiết hóa đơn chuyển hướng sang form ChiTietHoaDon.py
    def XemChiTietHoaDon(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_ChiTietHoaDon()
        self.ui.setupUi(self.window)
        self.window.show()

    def InHoaDon(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_InHoaDon()
        self.ui.setupUi(self.window)
        self.window.show()

    # hàm mở cửa sổ khác
    def openWindow(self, UiClass):
        self.window = QtWidgets.QMainWindow()
        self.ui = UiClass()
        self.ui.setupUi(self.window)
        self.window.show()
        self.window.closeEvent = self.reopenMainWindow 
        self.MainWindow.hide()  #ẩn tạm cửa sổ ban đầu
        
    def reopenMainWindow(self, event):
        
        self.MainWindow.show()#Hiển thị lại cửa sổ ban đầu
        event.accept()

# ##### đăng xuất
    def Logout(self):
        reply = QMessageBox.question(None, 'Cảnh báo', 'Bạn chắc chắn muốn đăng xuất?',
                                     QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
                                     QMessageBox.StandardButton.No)
        if reply == QMessageBox.StandardButton.Yes:
            self.MainWindow.close()  # Đóng cửa sổ hiện tại
            self.open_home()  # Mở cửa sổ home mới

    def open_home(self):
        from Home import Ui_Home
        # Tạo một instance của Ui_Home
        self.Dialog = QtWidgets.QDialog()
        self.ui = Ui_Home()
        self.ui.setupUi(self.Dialog)
        self.Dialog.show()
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_BanHang()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
